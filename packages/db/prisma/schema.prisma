generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  email String? @unique
  number String @unique
  password String
  name String?
  onRampTransactions onRampTransaction[]
  Balance Balance[]
  sentTransfers p2pTransfer[] @relation(name: "FromUserRelation")
  receivedTransfer p2pTransfer[] @relation(name: "ToUserRelation")
}


model Merchant {
  id Int @id @default(autoincrement())
  email String @unique
  name String?
  auth_Type AuthType
}

enum AuthType {
  Google
  Github
}


model onRampTransaction{
  id Int @id @default(autoincrement())
  status onRampStatus
  token String @unique
  provider String
  amount Int
  startTime DateTime
  userId Int
  user User @relation(fields: [userId], references: [id])
}


enum onRampStatus {
  Success
  Failure
  Processing
}


model Balance {
  id Int @id @default(autoincrement())
  userId Int @unique
  amount Int
  locked Int
  user User @relation(fields: [userId], references: [id]) 
}

model p2pTransfer {
  id Int @id @default(autoincrement())
  amount Int
  timestamp DateTime
  fromUserId Int
  fromUser User @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId Int
  toUser User @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}